name: Linux

on:
  workflow_call:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          path: vwebui
      - name: Setup V
        run: |
          curl -Lo v_linux.zip https://github.com/vlang/v/releases/latest/download/v_linux.zip
          unzip -o v_linux.zip
          mv v ~/v && ~/v/v symlink
      - name: Setup WebUI library
        run: |
          mkdir -p ~/.vmodules && mv vwebui ~/.vmodules/vwebui
          ~/.vmodules/vwebui/setup.vsh
      - name: Save cache
        uses: actions/cache/save@v4
        with:
          path: |
            ~/v
            ~/.vmodules
          key: ${{ runner.os }}-${{ github.sha }}

  lint:
    needs: setup
    uses: ./.github/workflows/lint.yml

  test:
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        cc: [gcc, clang]
      fail-fast: false
    env:
      VFLAGS: -cg -cc ${{ matrix.cc }}
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/v
            ~/.vmodules
          key: ${{ runner.os }}-${{ github.sha }}
          fail-on-cache-miss: true
      - name: Setup V
        run: ~/v/v symlink && v -showcc self && v doctor
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install xvfb x11-xserver-utils
      - name: Setup browser
        uses: browser-actions/setup-chrome@v1
      - name: Test
        id: test
        continue-on-error: true
        run: VJOBS=1 xvfb-run v -stats test "$HOME/.vmodules/vwebui/tests/"
      - name: Test with Logs
        if: steps.test.outcome != 'success'
        run: VJOBS=1 xvfb-run -a v -stats -d webui_log test "$HOME/.vmodules/vwebui/tests/"

  build-examples:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cc: [gcc, clang] # [tcc, gcc, clang]
        optimization: ['', '-W -cstrict']
        # exclude:
        #   - cc: tcc
        #     optimization: '-W -cstrict'
      fail-fast: false
    env:
      VFLAGS: -cg -cc ${{ matrix.cc }} ${{ matrix.optimization }}
    steps:
      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/v
            ~/.vmodules
          key: ${{ runner.os }}-${{ github.sha }}
          fail-on-cache-miss: true
      - name: Setup V
        run: ~/v/v symlink && v -showcc self && v doctor
      - name: Build
        run: |
          for dir in $(find ~/.vmodules/vwebui/examples/* -maxdepth 0 -type d); do
            cmd="v $dir/"
            echo "$cmd"
            eval "$cmd"
          done
          for file in $(find ~/.vmodules/vwebui/examples/* -maxdepth 0 -type d); do
            cmd="v $file"
            echo "$cmd"
            eval "$cmd"
          done
